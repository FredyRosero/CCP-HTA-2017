<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    xmlns:local="clr-namespace:CCP_HTA_2017.Views.Styles"
    xmlns:Controls="clr-namespace:CCP_HTA_2017.Controls">
    
    <!--  Ventana  -->
    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
                <ResizeGrip
                    x:Name="WindowResizeGrip"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    IsTabStop="false"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="512" />
        <Setter Property="Height" Value="512" />
        <Setter Property="MinWidth" Value="256" />
        <Setter Property="MinHeight" Value="256" />
        <Setter Property="Foreground" Value="{DynamicResource Frontal_brush}" />
        <Setter Property="Background" Value="{DynamicResource FondoBase_brush}" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="0" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  Barra de titulo  -->
    <Style x:Key="botonBarraTitulo_sty" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{DynamicResource botonBarraTitulo_tpl}" />
    </Style>
    <ControlTemplate x:Key="botonBarraTitulo_tpl" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle x:Name="Fondo" />
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontFamily="Webdings"
                Foreground="White"
                Text="{TemplateBinding Content}"
                TextAlignment="Center" />
            <ContentPresenter Content="{TemplateBinding Content}" Visibility="Hidden" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Fondo" Property="Fill" Value="#3FFFFFFF" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--  Barra estado  -->
    <Style TargetType="StatusBar">
        <Setter Property="Background" Value="{DynamicResource Fondo2_brush}" />
        <Setter Property="Foreground" Value="{DynamicResource Frontal_brush}" />
    </Style>
    <!--  GridSplitter  -->
    <Style TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource Fondo2_brush}" />
    </Style>
    <ControlTemplate x:Key="GridSplitterControlTemplate" TargetType="{x:Type GridSplitter}">
        <Border Background="{DynamicResource Fondo2_brush}" BorderBrush="Transparent" BorderThickness="0">
            <Border
                x:Name="Linea"
                Width="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Stretch">
                <Border.Background>
                    <SolidColorBrush Opacity="0.2" Color="{DynamicResource FrontalBase_color}" />
                </Border.Background>
            </Border>
        </Border>
    </ControlTemplate>
    <!--  Boton  -->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Fondo2_brush}"/>
        <Setter Property="Foreground" Value="{StaticResource Frontal_brush}"/>
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="25" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="4,2" />
        <Setter Property="Template" Value="{DynamicResource FlatButton_tpl}" />
    </Style>
    <!--  Barra de herramientas  -->
    <Style x:Key="ToolBarGridStyle" TargetType="{x:Type Grid}">
        <Style.Resources>
            <Style BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}" />
        </Style.Resources>
    </Style>
    <!--  Expander  -->
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource Frontal_brush}" />
    </Style>
    <!--  Etiqueta superior  -->
    <Style x:Key="Label_superior" BasedOn="{StaticResource FilaCompleta_sty}" TargetType="{x:Type Label}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Opacity="0.5" Color="{DynamicResource FrontalBase_color}" />
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Margin" Value="0,6,0,0" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Padding" Value="0,5,0,0" />
    </Style>
    <!--  Grid que agrupa Label y Control  -->
    <Style x:Key="LabelControlGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Width" Value="110" />
        <Setter Property="Margin" Value="15,0,15,5" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <!--  Menu  -->
    <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource Frontal_brush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Etiqueta de error  -->
    <ControlTemplate x:Key="validationErrorTemplate">
        <DockPanel>
            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
                <Grid>
                    <TextBlock
                        Margin="2,0,0,0"
                        FontSize="10"
                        Foreground="Red"
                        Text="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=ErrorAdorner}" />
                    <Rectangle
                        Width="Auto"
                        Height="1"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        Fill="Red" />
                </Grid>
            </StackPanel>
            <AdornedElementPlaceholder x:Name="ErrorAdorner" />
        </DockPanel>
    </ControlTemplate>
    <!--  TextBlock  -->
    <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="Grid.Column" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource Frontal_brush}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <!--  Contraseña  -->
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource Frontal_brush}" />
        <Setter Property="Foreground" Value="{DynamicResource Frontal_brush}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Resalte_brush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Resalte_brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  cuadricula de datos  -->
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="1" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Opacity="0.1" Color="{StaticResource FrontalBase_color}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource Fondo3_brush}" />
        <Setter Property="Foreground" Value="{DynamicResource Frontal_brush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="RowDetailsVisibilityMode" Value="Visible" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="{StaticResource Fondo2_brush}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid>
                                    <Themes:DataGridHeaderBorder 
                                        Padding="15,5,15,5"
                                        Background="{TemplateBinding Background}"
                                        IsClickable="{TemplateBinding CanUserSort}"
                                        IsHovered="{TemplateBinding IsMouseOver}"
                                        IsPressed="{TemplateBinding IsPressed}"
                                        SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                        SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                        SortDirection="{TemplateBinding SortDirection}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*" />
                                                <ColumnDefinition Width="auto" />
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter
                                                Grid.Column="0"
                                                Margin="5"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                <ContentPresenter.ContentTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}" TextAlignment="Center" />
                                                    </DataTemplate>
                                                </ContentPresenter.ContentTemplate>
                                            </ContentPresenter>
                                            <Path
                                                x:Name="SortArrow"
                                                Grid.Column="1"
                                                Width="8"
                                                Height="6"
                                                Margin="2,0,5,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Data="M0,0 L1,0 0.5,1 z"
                                                Fill="White"
                                                Opacity="0.5"
                                                RenderTransformOrigin="0.5,0.4"
                                                Stretch="Fill"
                                                Visibility="Collapsed" />
                                        </Grid>
                                    </Themes:DataGridHeaderBorder>
                                    <!--<Thumb
                                        x:Name="PART_LeftHeaderGripper"
                                        HorizontalAlignment="Left"
                                        Style="{StaticResource ColumnHeaderGripperStyle}" />-->
                                    <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="SortArrow" Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="180" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>



    <!--    -->

</ResourceDictionary>